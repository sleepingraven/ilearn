<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carry.ilearn.dao.UserLikeDao">
	<resultMap id="BaseResultMap" type="carry.ilearn.dataobject.UserLikeDO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="statement_id" jdbcType="INTEGER" property="statementId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, statement_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_like
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByUserIdAndStatementIdList" resultType="java.lang.Integer">
		select
		statement_id
		from
		user_like
		where
		user_id = #{userId,jdbcType=INTEGER}
		and statement_id in
		<choose>
			<when test="statementIds != null and statementIds.size > 0">
				<foreach collection="statementIds" item="statementId" open="(" close=")" separator=",">
					#{statementId,jdbcType=INTEGER}
				</foreach>
			</when>
			<otherwise>
				(-1)
			</otherwise>
		</choose>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete
		from
			user_like
		where
			id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByUserIdAndStatementId">
		delete
		from
			user_like
		where
			  user_id = #{userId,jdbcType=INTEGER}
		  and statement_id = #{statementId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id" parameterType="carry.ilearn.dataobject.UserLikeDO"
	        useGeneratedKeys="true">
		insert into user_like
			(user_id, statement_id)
		values
			(#{userId,jdbcType=INTEGER}, #{statementId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="carry.ilearn.dataobject.UserLikeDO"
	        useGeneratedKeys="true">
		insert into user_like
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="statementId != null">
				statement_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="statementId != null">
				#{statementId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="carry.ilearn.dataobject.UserLikeDO">
		update user_like
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="statementId != null">
				statement_id = #{statementId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="carry.ilearn.dataobject.UserLikeDO">
		update user_like
		set user_id      = #{userId,jdbcType=INTEGER},
		    statement_id = #{statementId,jdbcType=INTEGER}
		where
			id = #{id,jdbcType=INTEGER}
	</update>
</mapper>
