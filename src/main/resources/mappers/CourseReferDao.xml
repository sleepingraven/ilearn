<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carry.ilearn.dao.CourseReferDao">
	<resultMap id="BaseResultMap" type="carry.ilearn.dataobject.CourseReferDO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="href" jdbcType="VARCHAR" property="href" />
		<result column="course_id" jdbcType="INTEGER" property="courseId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, href, course_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_refer
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByCourseId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_refer
		where course_id = #{courseId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete
		from
			course_refer
		where
			id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByUser">
		delete course_refer
		from
			course_refer
				inner join course
					           on course_refer.course_id = course.id
		where
			  course_refer.id = #{id,jdbcType=INTEGER}
		  and user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id" parameterType="carry.ilearn.dataobject.CourseReferDO"
	        useGeneratedKeys="true">
		insert into course_refer
			(title, href, course_id)
		values
			(#{title,jdbcType=VARCHAR}, #{href,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="carry.ilearn.dataobject.CourseReferDO"
	        useGeneratedKeys="true">
		insert into course_refer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="title != null">
				title,
			</if>
			<if test="href != null">
				href,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="href != null">
				#{href,jdbcType=VARCHAR},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="carry.ilearn.dataobject.CourseReferDO">
		update course_refer
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="href != null">
				href = #{href,jdbcType=VARCHAR},
			</if>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="carry.ilearn.dataobject.CourseReferDO">
		update course_refer
		set title     = #{title,jdbcType=VARCHAR},
		    href      = #{href,jdbcType=VARCHAR},
		    course_id = #{courseId,jdbcType=INTEGER}
		where
			id = #{id,jdbcType=INTEGER}
	</update>
</mapper>
